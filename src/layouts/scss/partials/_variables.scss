
/*
*  =============
*   BREAKPOINTS
*  =============
*/
$breakpoints: (
  small: 'screen and (min-width: 37.5rem)',
  medium: 'screen and (min-width: 60rem)',
  large: 'screen and (min-width: 75rem)',
);
@mixin media-for($type) {
  @media #{map-get($breakpoints, $type)} {
    @content;
  }
}

/*
*  =============
*   SITE COLORS
*  =============
*/
$colors: (
  primary: (
    base: #2d2d2d,
  ),
  secondary: (
    base: #fff,
  ),
  dark: (
    base: #2d2d2d,
  )

);
@function color($name: primary, $variant: base) {
  @return map-get(map-get($colors, $name), $variant);
}

/*
*  =============
*   SITE FONTS
*  =============
*/
$fonts: (
  main: ('Roboto', sans-serif),
  heading: ('Iosevka', sans-serif),
  serif: ('Source Serif Pro', serif),
);
@function font($type: main) {
  @return map-get($fonts, $type);
}

/*
*  ===============
*   CUSTOM MIXINS
*  ===============
*/
@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin shadow($n: 1, $type: box) {
  $shadows: (
    1: (0 1px 3px rgba(0,0,0,0.12), 0 1px 2px rgba(0,0,0,0.24)),
    2: (0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23)),
    3: (0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)),
    4: (0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)),
    5: (0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22)),
  );
  @if $type == box {
    box-shadow: map-get($shadows, $n);
  } @else if $type == text {
    text-shadow: map-get($shadows, $n);
  }
}

@mixin visuallyhidden($bool: true) {
  @if $bool {
    position: absolute; 
    overflow: hidden; 
    clip: rect(0 0 0 0); 
    height: 1px;
    width: 1px; 
    margin: -1px;
    padding: 0;
    border: 0; 
  } @else {
    position: relative; 
    overflow: auto;
    clip: auto; 
    height: auto;
    width: auto; 
    margin: 0;
    padding: 0;
    border: none;
  }
}
